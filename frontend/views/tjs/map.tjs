require([
  "esri/Map",
  "esri/views/MapView",
  "esri/layers/FeatureLayer",
  "esri/widgets/Sketch/SketchViewModel",
  "esri/Graphic",
  "esri/layers/GraphicsLayer",
  "esri/geometry/Polygon",
  "esri/geometry/Polyline",
  "esri/layers/MapImageLayer",
  "esri/geometry/geometryEngine",
  "esri/geometry/Point",
  "esri/geometry/SpatialReference",
  "esri/geometry/support/webMercatorUtils"
], function (
  Map,
  MapView,
  FeatureLayer,
  SketchViewModel,
  Graphic,
  GraphicsLayer,
  Polygon,
  Polyline,
  MapImageLayer,
  geometryEngine,
  Point,
  SpatialReference,
  webMercatorUtils
) {
  const parameters = {{reglue:"Parameters/parameterProvider"}};
  const layers = {{reglue:"Parameters/layers"}};
  const connectorClass = {{reglue:"Connector/connector"}};
  const symbols = {{reglue:"Parameters/symbols"}};
  const sketchClass = {{reglue:"SketchViewModel/sketch"}};
  const parcelLoaderClass = {{reglue:"Connector/parcelLoader"}};
  const utilityFunctions = {{reglue:"Utils/utilityFunctions"}};
      let ids = [{"objectid": 15}, {"objectid": 1025712}, {"objectid": 15781}];
    utilityFunctions.getParcelsPrices(ids, function (response) {
        console.log(response);
    });
  // right now there are global variables
  let polygonStack = [];
  let parcelLayersStack = [];
  let id = 0;
  let parcelMap = {};
  let editGraphic;


  let map = new Map({
    basemap: "gray",
    layers: [layers.temporaryObjects, layers.areaErrors, layers.graphics, layers.errors]
  });

  window.map = map;
  const view = new MapView({
    container: "viewDiv",
    map: map,
    center: [-118.352, 33.883],
    scale: 50000,
    constraints: {
      rotationEnabled: false
    }
  });

  connectorClass(map,view, parcelLayersStack);


  let sketch = sketchClass(map, view, layers, symbols);


});
