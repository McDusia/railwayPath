import csv
import os

from keras.engine.saving import load_model
import numpy as np
from src.parcels_valuation.configuration.configuration_constants import *
from src.parcels_valuation.file_names_builder import get_model_filename, get_model_filename_b
from src.parcels_valuation.utils.database_handler import DatabaseHandler
from src.parcels_valuation.utils.logger import create_loggers_helper
import logging


def create_logger():
    _logger = logging.getLogger(__name__)
    _logger.setLevel(logging.DEBUG)
    return create_loggers_helper(_logger)


logger = create_logger()


def keras_load_model(file_name):
    if os.path.exists(get_model_filename()):
        logger.info('Loading model from {}.'.format(file_name))
        return load_model(file_name, compile = True)
    else:
        logger.error('The model {} can not be found. Firstly run neural_network_model_trainer.py'.format(get_model_filename()))
        return


def main():
    database_handler = DatabaseHandler()
    try:
        for bucket in classification_buckets:
            model_filename = get_model_filename_b(bucket=bucket)
            model = keras_load_model(model_filename)
            model.summary()
            model.get_config()

    finally:
        database_handler.close_connection()


if __name__ == '__main__':
    main()
